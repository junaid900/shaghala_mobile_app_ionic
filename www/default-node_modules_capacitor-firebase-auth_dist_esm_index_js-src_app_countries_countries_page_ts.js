"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["default-node_modules_capacitor-firebase-auth_dist_esm_index_js-src_app_countries_countries_page_ts"],{

/***/ 32380:
/*!**********************************************************************!*\
  !*** ./node_modules/capacitor-firebase-auth/dist/esm/definitions.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GoogleSignInResult": () => (/* binding */ GoogleSignInResult),
/* harmony export */   "TwitterSignInResult": () => (/* binding */ TwitterSignInResult),
/* harmony export */   "FacebookSignInResult": () => (/* binding */ FacebookSignInResult),
/* harmony export */   "AppleSignInResult": () => (/* binding */ AppleSignInResult),
/* harmony export */   "PhoneSignInResult": () => (/* binding */ PhoneSignInResult)
/* harmony export */ });
/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/auth */ 51070);
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/app */ 86559);


class GoogleSignInResult {
    constructor(idToken) {
        this.idToken = idToken;
        this.providerId = firebase_app__WEBPACK_IMPORTED_MODULE_1__["default"].auth.GoogleAuthProvider.PROVIDER_ID;
    }
}
class TwitterSignInResult {
    constructor(idToken, secret) {
        this.idToken = idToken;
        this.secret = secret;
        this.providerId = firebase_app__WEBPACK_IMPORTED_MODULE_1__["default"].auth.TwitterAuthProvider.PROVIDER_ID;
    }
}
class FacebookSignInResult {
    constructor(idToken) {
        this.idToken = idToken;
        this.providerId = firebase_app__WEBPACK_IMPORTED_MODULE_1__["default"].auth.FacebookAuthProvider.PROVIDER_ID;
    }
}
class AppleSignInResult {
    constructor(idToken, rawNonce, accessToken, secret) {
        this.idToken = idToken;
        this.rawNonce = rawNonce;
        this.accessToken = accessToken;
        this.secret = secret;
        this.providerId = firebase_app__WEBPACK_IMPORTED_MODULE_1__["default"].auth.FacebookAuthProvider.PROVIDER_ID;
    }
}
class PhoneSignInResult {
    constructor(verificationId, verificationCode) {
        this.verificationId = verificationId;
        this.verificationCode = verificationCode;
        this.providerId = firebase_app__WEBPACK_IMPORTED_MODULE_1__["default"].auth.PhoneAuthProvider.PROVIDER_ID;
    }
}


/***/ }),

/***/ 78143:
/*!******************************************************************!*\
  !*** ./node_modules/capacitor-firebase-auth/dist/esm/facades.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CapacitorFirebaseAuth": () => (/* binding */ CapacitorFirebaseAuth),
/* harmony export */   "cfaSignIn": () => (/* binding */ cfaSignIn),
/* harmony export */   "cfaSignInGoogle": () => (/* binding */ cfaSignInGoogle),
/* harmony export */   "cfaSignInTwitter": () => (/* binding */ cfaSignInTwitter),
/* harmony export */   "cfaSignInFacebook": () => (/* binding */ cfaSignInFacebook),
/* harmony export */   "cfaSignInAppleProvider": () => (/* binding */ cfaSignInAppleProvider),
/* harmony export */   "cfaSignInApple": () => (/* binding */ cfaSignInApple),
/* harmony export */   "cfaSignInPhone": () => (/* binding */ cfaSignInPhone),
/* harmony export */   "cfaSignInPhoneOnCodeSent": () => (/* binding */ cfaSignInPhoneOnCodeSent),
/* harmony export */   "cfaSignInPhoneOnCodeReceived": () => (/* binding */ cfaSignInPhoneOnCodeReceived),
/* harmony export */   "cfaSignOut": () => (/* binding */ cfaSignOut)
/* harmony export */ });
/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/auth */ 51070);
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @capacitor/core */ 38062);
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/app */ 86559);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 9500);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 51590);




const CapacitorFirebaseAuth = (0,_capacitor_core__WEBPACK_IMPORTED_MODULE_1__.registerPlugin)('CapacitorFirebaseAuth', {
    web: () => __webpack_require__.e(/*! import() */ "node_modules_capacitor-firebase-auth_dist_esm_web_js").then(__webpack_require__.bind(__webpack_require__, /*! ./web */ 7006)).then(m => new m.CapacitorFirebaseAuthWeb()),
});
const plugin = CapacitorFirebaseAuth;
/**
 * Call the sign in method on native layer and sign in on web layer with retrieved credentials.
 * @param providerId The provider identification.
 * @param data The provider additional information (optional).
 */
const cfaSignIn = (providerId, data) => {
    const googleProvider = new firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.GoogleAuthProvider().providerId;
    const facebookProvider = new firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.FacebookAuthProvider().providerId;
    const twitterProvider = new firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.TwitterAuthProvider().providerId;
    const phoneProvider = new firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.PhoneAuthProvider().providerId;
    switch (providerId) {
        case googleProvider:
            return cfaSignInGoogle();
        case twitterProvider:
            return cfaSignInTwitter();
        case facebookProvider:
            return cfaSignInFacebook();
        case cfaSignInAppleProvider:
            return cfaSignInApple();
        case phoneProvider:
            if (!data) {
                throw new Error('Phone and Verification data must be provided.');
            }
            return cfaSignInPhone(data.phone, data.verificationCode);
        default:
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.throwError)(new Error(`The '${providerId}' provider was not supported`));
    }
};
/**
 * Call the Google sign in method on native layer and sign in on web layer with retrieved credentials.
 */
const cfaSignInGoogle = () => {
    return new rxjs__WEBPACK_IMPORTED_MODULE_4__.Observable(observer => {
        // get the provider id
        const providerId = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.GoogleAuthProvider.PROVIDER_ID;
        // native sign in
        plugin.signIn({ providerId }).then((result) => {
            // create the credentials
            const credential = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.GoogleAuthProvider.credential(result.idToken);
            // web sign in
            firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].app().auth().signInWithCredential(credential)
                .then((userCredential) => {
                if (!userCredential.user) {
                    throw new Error('Firebase User was not received.');
                }
                observer.next(userCredential.user);
                observer.complete();
            })
                .catch((reject) => {
                observer.error(reject);
            });
        }).catch((reject) => {
            observer.error(reject);
        });
    });
};
/**
 * Call the Twitter sign in method on native and sign in on web layer with retrieved credentials.
 */
const cfaSignInTwitter = () => {
    return new rxjs__WEBPACK_IMPORTED_MODULE_4__.Observable(observer => {
        // get the provider id
        const providerId = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.TwitterAuthProvider.PROVIDER_ID;
        // native sign in
        plugin.signIn({ providerId }).then((result) => {
            // create the credentials
            const credential = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.TwitterAuthProvider.credential(result.idToken, result.secret);
            // web sign in
            firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].app().auth().signInWithCredential(credential)
                .then((userCredential) => {
                if (!userCredential.user) {
                    throw new Error('Firebase User was not received.');
                }
                observer.next(userCredential.user);
                observer.complete();
            })
                .catch((reject) => observer.error(reject));
        }).catch((reject) => observer.error(reject));
    });
};
/**
 * Call the Facebook sign in method on native and sign in on web layer with retrieved credentials.
 */
const cfaSignInFacebook = () => {
    return new rxjs__WEBPACK_IMPORTED_MODULE_4__.Observable(observer => {
        // get the provider id
        const providerId = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.FacebookAuthProvider.PROVIDER_ID;
        // native sign in
        plugin.signIn({ providerId }).then((result) => {
            // create the credentials
            const credential = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.FacebookAuthProvider.credential(result.idToken);
            // web sign in
            firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].app().auth().signInWithCredential(credential)
                .then((userCredential) => {
                if (!userCredential.user) {
                    throw new Error('Firebase User was not received.');
                }
                observer.next(userCredential.user);
                observer.complete();
            })
                .catch((reject) => observer.error(reject));
        }).catch((reject) => observer.error(reject));
    });
};
const cfaSignInAppleProvider = 'apple.com';
/**
 * Call the Apple sign in method on native and sign in on web layer with retrieved credentials.
 */
const cfaSignInApple = () => {
    return new rxjs__WEBPACK_IMPORTED_MODULE_4__.Observable(observer => {
        // native sign in
        plugin.signIn({ providerId: cfaSignInAppleProvider }).then((result) => {
            const { idToken, rawNonce } = result;
            const provider = new firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.OAuthProvider('apple.com');
            provider.addScope('email');
            provider.addScope('name');
            const credential = provider.credential({ idToken, rawNonce });
            // web sign in
            firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].app().auth().signInWithCredential(credential)
                .then((userCredential) => {
                if (!userCredential.user) {
                    throw new Error('Firebase User was not received.');
                }
                observer.next(userCredential.user);
                observer.complete();
            })
                .catch((reject) => observer.error(reject));
        }).catch((reject) => observer.error(reject));
    });
};
/**
 * Call the Phone verification sign in, handling send and retrieve to code on native, but only sign in on web with retrieved credentials.
 * @param phone The user phone number.
 * @param verificationCode The verification code sent by SMS (optional).
 */
const cfaSignInPhone = (phone, verificationCode) => {
    return new rxjs__WEBPACK_IMPORTED_MODULE_4__.Observable(observer => {
        // get the provider id
        const providerId = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.PhoneAuthProvider.PROVIDER_ID;
        plugin.signIn({ providerId, data: { phone, verificationCode } }).then((result) => {
            // if there is no verification code
            if (!result.verificationCode) {
                return observer.complete();
            }
            // create the credentials
            const credential = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth.PhoneAuthProvider.credential(result.verificationId, result.verificationCode);
            // web sign in
            firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].app().auth().signInWithCredential(credential)
                .then((userCredential) => {
                if (!userCredential.user) {
                    throw new Error('Firebase User was not received.');
                }
                observer.next(userCredential.user);
                observer.complete();
            })
                .catch((reject) => observer.error(reject));
        }).catch((reject) => observer.error(reject));
    });
};
/**
 * Observable of one notification of <code>On Code Sent</code>event from Phone Verification process.
 */
const cfaSignInPhoneOnCodeSent = () => {
    return new rxjs__WEBPACK_IMPORTED_MODULE_4__.Observable(observer => {
        // @ts-ignore
        return plugin.addListener('cfaSignInPhoneOnCodeSent', (event) => {
            observer.next(event.verificationId);
            observer.complete();
        });
    });
};
/**
 * Observable of one notification of <code>On Code Received</code> event from Phone Verification process.
 */
const cfaSignInPhoneOnCodeReceived = () => {
    return new rxjs__WEBPACK_IMPORTED_MODULE_4__.Observable(observer => {
        // @ts-ignore
        return plugin.addListener('cfaSignInPhoneOnCodeReceived', (event) => {
            observer.next(event);
            observer.complete();
        });
    });
};
/**
 * Call Google sign out method on native and web layers.
 */
const cfaSignOut = () => {
    return new rxjs__WEBPACK_IMPORTED_MODULE_4__.Observable(observer => {
        plugin.signOut({}).then(() => {
            // web sign out
            firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].app().auth().signOut()
                .then(() => {
                observer.next();
                observer.complete();
            })
                .catch((reject) => observer.error(reject));
        });
    });
};


/***/ }),

/***/ 30107:
/*!****************************************************************!*\
  !*** ./node_modules/capacitor-firebase-auth/dist/esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppleSignInResult": () => (/* reexport safe */ _definitions__WEBPACK_IMPORTED_MODULE_0__.AppleSignInResult),
/* harmony export */   "FacebookSignInResult": () => (/* reexport safe */ _definitions__WEBPACK_IMPORTED_MODULE_0__.FacebookSignInResult),
/* harmony export */   "GoogleSignInResult": () => (/* reexport safe */ _definitions__WEBPACK_IMPORTED_MODULE_0__.GoogleSignInResult),
/* harmony export */   "PhoneSignInResult": () => (/* reexport safe */ _definitions__WEBPACK_IMPORTED_MODULE_0__.PhoneSignInResult),
/* harmony export */   "TwitterSignInResult": () => (/* reexport safe */ _definitions__WEBPACK_IMPORTED_MODULE_0__.TwitterSignInResult),
/* harmony export */   "CapacitorFirebaseAuth": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.CapacitorFirebaseAuth),
/* harmony export */   "cfaSignIn": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignIn),
/* harmony export */   "cfaSignInApple": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignInApple),
/* harmony export */   "cfaSignInAppleProvider": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignInAppleProvider),
/* harmony export */   "cfaSignInFacebook": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignInFacebook),
/* harmony export */   "cfaSignInGoogle": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignInGoogle),
/* harmony export */   "cfaSignInPhone": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignInPhone),
/* harmony export */   "cfaSignInPhoneOnCodeReceived": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignInPhoneOnCodeReceived),
/* harmony export */   "cfaSignInPhoneOnCodeSent": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignInPhoneOnCodeSent),
/* harmony export */   "cfaSignInTwitter": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignInTwitter),
/* harmony export */   "cfaSignOut": () => (/* reexport safe */ _facades__WEBPACK_IMPORTED_MODULE_1__.cfaSignOut),
/* harmony export */   "mapUserCredentialToUserInfo": () => (/* reexport safe */ _operators__WEBPACK_IMPORTED_MODULE_2__.mapUserCredentialToUserInfo),
/* harmony export */   "mapUserToUserInfo": () => (/* reexport safe */ _operators__WEBPACK_IMPORTED_MODULE_2__.mapUserToUserInfo)
/* harmony export */ });
/* harmony import */ var _definitions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./definitions */ 32380);
/* harmony import */ var _facades__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./facades */ 78143);
/* harmony import */ var _operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operators */ 9967);





/***/ }),

/***/ 9967:
/*!********************************************************************!*\
  !*** ./node_modules/capacitor-firebase-auth/dist/esm/operators.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mapUserToUserInfo": () => (/* binding */ mapUserToUserInfo),
/* harmony export */   "mapUserCredentialToUserInfo": () => (/* binding */ mapUserCredentialToUserInfo)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 61755);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ 88377);


/**
 * Operator to map firebase.User to firebase.UserInfo.
 *
 * Sample of use:
 *
 * ```ts
 * import {cfaSignIn, mapUserToUserInfo} from 'capacitor-firebase-auth';
 * import {UserInfo} from 'firebase/app';
 *
 * cfaSignIn('google.com').pipe(
 *     mapUserToUserInfo(),
 * ).subscribe(
 *     (user: UserInfo) => console.log(user.displayName);
 * )
 * ```
 */
const mapUserToUserInfo = () => (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.pipe)((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((user) => {
    if (user) {
        const { uid, providerId, displayName, photoURL, phoneNumber, email } = user;
        return { uid, providerId, displayName, photoURL, phoneNumber, email };
    }
    return user;
}));
/**
 * Operator to map firebase.auth.UserCredential to firebase.UserInfo.
 *
 * For use with alternative facade only.
 *
 * Sample of use:
 *
 * ```ts
 * import {cfaSignIn, mapUserToUserInfo} from 'capacitor-firebase-auth/alternative';
 * import {UserInfo} from 'firebase/app';
 *
 * cfaSignIn('google.com').pipe(
 *     mapUserToUserInfo(),
 * ).subscribe(
 *     (user: UserInfo) => console.log(user.displayName);
 * )
 * ```
 */
const mapUserCredentialToUserInfo = () => (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.pipe)((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)(({ userCredential }) => {
    if (userCredential === null || userCredential === void 0 ? void 0 : userCredential.user) {
        const { uid, providerId, displayName, photoURL, phoneNumber, email } = userCredential.user;
        return { uid, providerId, displayName, photoURL, phoneNumber, email };
    }
    return null;
}));


/***/ }),

/***/ 38062:
/*!*****************************************************************************************!*\
  !*** ./node_modules/capacitor-firebase-auth/node_modules/@capacitor/core/dist/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Capacitor": () => (/* binding */ Capacitor),
/* harmony export */   "CapacitorException": () => (/* binding */ CapacitorException),
/* harmony export */   "CapacitorPlatforms": () => (/* binding */ CapacitorPlatforms),
/* harmony export */   "ExceptionCode": () => (/* binding */ ExceptionCode),
/* harmony export */   "Plugins": () => (/* binding */ Plugins),
/* harmony export */   "WebPlugin": () => (/* binding */ WebPlugin),
/* harmony export */   "WebView": () => (/* binding */ WebView),
/* harmony export */   "addPlatform": () => (/* binding */ addPlatform),
/* harmony export */   "registerPlugin": () => (/* binding */ registerPlugin),
/* harmony export */   "registerWebPlugin": () => (/* binding */ registerWebPlugin),
/* harmony export */   "setPlatform": () => (/* binding */ setPlatform)
/* harmony export */ });
/* harmony import */ var _Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 62783);


/*! Capacitor: https://capacitorjs.com/ - MIT License */
const createCapacitorPlatforms = win => {
  const defaultPlatformMap = new Map();
  defaultPlatformMap.set('web', {
    name: 'web'
  });
  const capPlatforms = win.CapacitorPlatforms || {
    currentPlatform: {
      name: 'web'
    },
    platforms: defaultPlatformMap
  };

  const addPlatform = (name, platform) => {
    capPlatforms.platforms.set(name, platform);
  };

  const setPlatform = name => {
    if (capPlatforms.platforms.has(name)) {
      capPlatforms.currentPlatform = capPlatforms.platforms.get(name);
    }
  };

  capPlatforms.addPlatform = addPlatform;
  capPlatforms.setPlatform = setPlatform;
  return capPlatforms;
};

const initPlatforms = win => win.CapacitorPlatforms = createCapacitorPlatforms(win);
/**
 * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead
 */


const CapacitorPlatforms = /*#__PURE__*/initPlatforms(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});
/**
 * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead
 */

const addPlatform = CapacitorPlatforms.addPlatform;
/**
 * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead
 */

const setPlatform = CapacitorPlatforms.setPlatform;

const legacyRegisterWebPlugin = (cap, webPlugin) => {
  var _a;

  const config = webPlugin.config;
  const Plugins = cap.Plugins;

  if (!config || !config.name) {
    // TODO: add link to upgrade guide
    throw new Error(`Capacitor WebPlugin is using the deprecated "registerWebPlugin()" function, but without the config. Please use "registerPlugin()" instead to register this web plugin."`);
  } // TODO: add link to upgrade guide


  console.warn(`Capacitor plugin "${config.name}" is using the deprecated "registerWebPlugin()" function`);

  if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {
    // Add the web plugin into the plugins registry if there already isn't
    // an existing one. If it doesn't already exist, that means
    // there's no existing native implementation for it.
    // - OR -
    // If we already have a plugin registered (meaning it was defined in the native layer),
    // then we should only overwrite it if the corresponding web plugin activates on
    // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS
    Plugins[config.name] = webPlugin;
  }
};

var ExceptionCode;

(function (ExceptionCode) {
  /**
   * API is not implemented.
   *
   * This usually means the API can't be used because it is not implemented for
   * the current platform.
   */
  ExceptionCode["Unimplemented"] = "UNIMPLEMENTED";
  /**
   * API is not available.
   *
   * This means the API can't be used right now because:
   *   - it is currently missing a prerequisite, such as network connectivity
   *   - it requires a particular platform or browser version
   */

  ExceptionCode["Unavailable"] = "UNAVAILABLE";
})(ExceptionCode || (ExceptionCode = {}));

class CapacitorException extends Error {
  constructor(message, code) {
    super(message);
    this.message = message;
    this.code = code;
  }

}

const getPlatformId = win => {
  var _a, _b;

  if (win === null || win === void 0 ? void 0 : win.androidBridge) {
    return 'android';
  } else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {
    return 'ios';
  } else {
    return 'web';
  }
};

const createCapacitor = win => {
  var _a, _b, _c, _d, _e;

  const capCustomPlatform = win.CapacitorCustomPlatform || null;
  const cap = win.Capacitor || {};
  const Plugins = cap.Plugins = cap.Plugins || {};
  /**
   * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.
   */

  const capPlatforms = win.CapacitorPlatforms;

  const defaultGetPlatform = () => {
    return capCustomPlatform !== null ? capCustomPlatform.name : getPlatformId(win);
  };

  const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;

  const defaultIsNativePlatform = () => getPlatform() !== 'web';

  const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;

  const defaultIsPluginAvailable = pluginName => {
    const plugin = registeredPlugins.get(pluginName);

    if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {
      // JS implementation available for the current platform.
      return true;
    }

    if (getPluginHeader(pluginName)) {
      // Native implementation available.
      return true;
    }

    return false;
  };

  const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) || defaultIsPluginAvailable;

  const defaultGetPluginHeader = pluginName => {
    var _a;

    return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName);
  };

  const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;

  const handleError = err => win.console.error(err);

  const pluginMethodNoop = (_target, prop, pluginName) => {
    return Promise.reject(`${pluginName} does not have an implementation of "${prop}".`);
  };

  const registeredPlugins = new Map();

  const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {
    const registeredPlugin = registeredPlugins.get(pluginName);

    if (registeredPlugin) {
      console.warn(`Capacitor plugin "${pluginName}" already registered. Cannot register plugins twice.`);
      return registeredPlugin.proxy;
    }

    const platform = getPlatform();
    const pluginHeader = getPluginHeader(pluginName);
    let jsImplementation;

    const loadPluginImplementation = /*#__PURE__*/function () {
      var _ref = (0,_Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
        if (!jsImplementation && platform in jsImplementations) {
          jsImplementation = typeof jsImplementations[platform] === 'function' ? jsImplementation = yield jsImplementations[platform]() : jsImplementation = jsImplementations[platform];
        } else if (capCustomPlatform !== null && !jsImplementation && 'web' in jsImplementations) {
          jsImplementation = typeof jsImplementations['web'] === 'function' ? jsImplementation = yield jsImplementations['web']() : jsImplementation = jsImplementations['web'];
        }

        return jsImplementation;
      });

      return function loadPluginImplementation() {
        return _ref.apply(this, arguments);
      };
    }();

    const createPluginMethod = (impl, prop) => {
      var _a, _b;

      if (pluginHeader) {
        const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);

        if (methodHeader) {
          if (methodHeader.rtype === 'promise') {
            return options => cap.nativePromise(pluginName, prop.toString(), options);
          } else {
            return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);
          }
        } else if (impl) {
          return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);
        }
      } else if (impl) {
        return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);
      } else {
        throw new CapacitorException(`"${pluginName}" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);
      }
    };

    const createPluginMethodWrapper = prop => {
      let remove;

      const wrapper = (...args) => {
        const p = loadPluginImplementation().then(impl => {
          const fn = createPluginMethod(impl, prop);

          if (fn) {
            const p = fn(...args);
            remove = p === null || p === void 0 ? void 0 : p.remove;
            return p;
          } else {
            throw new CapacitorException(`"${pluginName}.${prop}()" is not implemented on ${platform}`, ExceptionCode.Unimplemented);
          }
        });

        if (prop === 'addListener') {
          p.remove = /*#__PURE__*/(0,_Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
            return remove();
          });
        }

        return p;
      }; // Some flair ✨


      wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;

      Object.defineProperty(wrapper, 'name', {
        value: prop,
        writable: false,
        configurable: false
      });
      return wrapper;
    };

    const addListener = createPluginMethodWrapper('addListener');
    const removeListener = createPluginMethodWrapper('removeListener');

    const addListenerNative = (eventName, callback) => {
      const call = addListener({
        eventName
      }, callback);

      const remove = /*#__PURE__*/function () {
        var _ref3 = (0,_Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
          const callbackId = yield call;
          removeListener({
            eventName,
            callbackId
          }, callback);
        });

        return function remove() {
          return _ref3.apply(this, arguments);
        };
      }();

      const p = new Promise(resolve => call.then(() => resolve({
        remove
      })));
      p.remove = /*#__PURE__*/(0,_Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
        console.warn(`Using addListener() without 'await' is deprecated.`);
        yield remove();
      });
      return p;
    };

    const proxy = new Proxy({}, {
      get(_, prop) {
        switch (prop) {
          // https://github.com/facebook/react/issues/20030
          case '$$typeof':
            return undefined;

          case 'toJSON':
            return () => ({});

          case 'addListener':
            return pluginHeader ? addListenerNative : addListener;

          case 'removeListener':
            return removeListener;

          default:
            return createPluginMethodWrapper(prop);
        }
      }

    });
    Plugins[pluginName] = proxy;
    registeredPlugins.set(pluginName, {
      name: pluginName,
      proxy,
      platforms: new Set([...Object.keys(jsImplementations), ...(pluginHeader ? [platform] : [])])
    });
    return proxy;
  };

  const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin; // Add in convertFileSrc for web, it will already be available in native context

  if (!cap.convertFileSrc) {
    cap.convertFileSrc = filePath => filePath;
  }

  cap.getPlatform = getPlatform;
  cap.handleError = handleError;
  cap.isNativePlatform = isNativePlatform;
  cap.isPluginAvailable = isPluginAvailable;
  cap.pluginMethodNoop = pluginMethodNoop;
  cap.registerPlugin = registerPlugin;
  cap.Exception = CapacitorException;
  cap.DEBUG = !!cap.DEBUG;
  cap.isLoggingEnabled = !!cap.isLoggingEnabled; // Deprecated props

  cap.platform = cap.getPlatform();
  cap.isNative = cap.isNativePlatform();
  return cap;
};

const initCapacitorGlobal = win => win.Capacitor = createCapacitor(win);

const Capacitor = /*#__PURE__*/initCapacitorGlobal(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});
const registerPlugin = Capacitor.registerPlugin;
/**
 * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.
 * Capacitor v3 plugins should import the plugin directly. This "Plugins"
 * export is deprecated in v3, and will be removed in v4.
 */

const Plugins = Capacitor.Plugins;
/**
 * Provided for backwards compatibility. Use the registerPlugin() API
 * instead, and provide the web plugin as the "web" implmenetation.
 * For example
 *
 * export const Example = registerPlugin('Example', {
 *   web: () => import('./web').then(m => new m.Example())
 * })
 *
 * @deprecated Deprecated in v3, will be removed from v4.
 */

const registerWebPlugin = plugin => legacyRegisterWebPlugin(Capacitor, plugin);
/**
 * Base class web plugins should extend.
 */


class WebPlugin {
  constructor(config) {
    this.listeners = {};
    this.windowListeners = {};

    if (config) {
      // TODO: add link to upgrade guide
      console.warn(`Capacitor WebPlugin "${config.name}" config object was deprecated in v3 and will be removed in v4.`);
      this.config = config;
    }
  }

  addListener(eventName, listenerFunc) {
    var _this = this;

    const listeners = this.listeners[eventName];

    if (!listeners) {
      this.listeners[eventName] = [];
    }

    this.listeners[eventName].push(listenerFunc); // If we haven't added a window listener for this event and it requires one,
    // go ahead and add it

    const windowListener = this.windowListeners[eventName];

    if (windowListener && !windowListener.registered) {
      this.addWindowListener(windowListener);
    }

    const remove = /*#__PURE__*/function () {
      var _ref5 = (0,_Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
        return _this.removeListener(eventName, listenerFunc);
      });

      return function remove() {
        return _ref5.apply(this, arguments);
      };
    }();

    const p = Promise.resolve({
      remove
    });
    Object.defineProperty(p, 'remove', {
      value: function () {
        var _ref6 = (0,_Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
          console.warn(`Using addListener() without 'await' is deprecated.`);
          yield remove();
        });

        return function value() {
          return _ref6.apply(this, arguments);
        };
      }()
    });
    return p;
  }

  removeAllListeners() {
    var _this2 = this;

    return (0,_Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this2.listeners = {};

      for (const listener in _this2.windowListeners) {
        _this2.removeWindowListener(_this2.windowListeners[listener]);
      }

      _this2.windowListeners = {};
    })();
  }

  notifyListeners(eventName, data) {
    const listeners = this.listeners[eventName];

    if (listeners) {
      listeners.forEach(listener => listener(data));
    }
  }

  hasListeners(eventName) {
    return !!this.listeners[eventName].length;
  }

  registerWindowListener(windowEventName, pluginEventName) {
    this.windowListeners[pluginEventName] = {
      registered: false,
      windowEventName,
      pluginEventName,
      handler: event => {
        this.notifyListeners(pluginEventName, event);
      }
    };
  }

  unimplemented(msg = 'not implemented') {
    return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);
  }

  unavailable(msg = 'not available') {
    return new Capacitor.Exception(msg, ExceptionCode.Unavailable);
  }

  removeListener(eventName, listenerFunc) {
    var _this3 = this;

    return (0,_Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const listeners = _this3.listeners[eventName];

      if (!listeners) {
        return;
      }

      const index = listeners.indexOf(listenerFunc);

      _this3.listeners[eventName].splice(index, 1); // If there are no more listeners for this type of event,
      // remove the window listener


      if (!_this3.listeners[eventName].length) {
        _this3.removeWindowListener(_this3.windowListeners[eventName]);
      }
    })();
  }

  addWindowListener(handle) {
    window.addEventListener(handle.windowEventName, handle.handler);
    handle.registered = true;
  }

  removeWindowListener(handle) {
    if (!handle) {
      return;
    }

    window.removeEventListener(handle.windowEventName, handle.handler);
    handle.registered = false;
  }

}

const WebView = /*#__PURE__*/registerPlugin('WebView');


/***/ }),

/***/ 86559:
/*!*****************************************************!*\
  !*** ./node_modules/firebase/app/dist/index.esm.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ 86061);



var name = "firebase";
var version = "8.7.1";

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
_firebase_app__WEBPACK_IMPORTED_MODULE_0__["default"].registerVersion(name, version, 'app');
_firebase_app__WEBPACK_IMPORTED_MODULE_0__["default"].SDK_VERSION = version;


/***/ }),

/***/ 51070:
/*!******************************************************!*\
  !*** ./node_modules/firebase/auth/dist/index.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _firebase_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/auth */ 26386);



/***/ }),

/***/ 28484:
/*!*********************************************!*\
  !*** ./src/app/countries/countries.page.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CountriesPage": () => (/* binding */ CountriesPage)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 98806);
/* harmony import */ var _Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_ngtools_webpack_src_loaders_direct_resource_js_countries_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !./node_modules/@ngtools/webpack/src/loaders/direct-resource.js!./countries.page.html */ 37784);
/* harmony import */ var _countries_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./countries.page.scss */ 15259);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 14001);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic/angular */ 78099);
/* harmony import */ var _services_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/api.service */ 67118);
/* harmony import */ var _services_api_url_hepler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/api_url.hepler */ 69941);







let CountriesPage = class CountriesPage {
    constructor(api, modalCtrl, popoverCtrl, navParams) {
        this.api = api;
        this.modalCtrl = modalCtrl;
        this.popoverCtrl = popoverCtrl;
        this.navParams = navParams;
        this.countries = [];
        this.allCounties = [];
        this.selectedCountry = {
        // country_id: 0
        };
        this.isLoading = false;
    }
    ngOnInit() {
        this.getPageData();
    }
    goBack() {
        this.popoverCtrl.dismiss();
        // try{
        //   this.modalCtrl.dismiss();
        // }catch(e){
        // }
    }
    getPageData() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            this.isLoading = true;
            let response = yield this.api.getRequest(_services_api_url_hepler__WEBPACK_IMPORTED_MODULE_3__.getCountiesApi);
            this.isLoading = false;
            console.log(response);
            if (response) {
                if (!this.selectedCountry.country_id) {
                    let id = this.navParams.data.country.country_id;
                    if (id) {
                        let sCountry = response.filter((e) => {
                            return id == e.country_id;
                        });
                        const index = response.findIndex(e => {
                            if (id == e.country_id) {
                                return true;
                            }
                            return false;
                        });
                        console.log(index);
                        sCountry['index'] = index;
                        console.log(sCountry);
                        if (sCountry.length > 0) {
                            this.selectedCountry = sCountry[0];
                            this.scrollTo(sCountry.index);
                        }
                        console.log(this.selectedCountry);
                    }
                }
                this.countries = response;
                this.allCounties = response;
            }
        });
    }
    selectCountry(c, i) {
        c['index'] = i;
        console.log(c);
        this.selectedCountry = c;
        if (this.selectedCountry) {
            // try{
            // this.modalCtrl.dismiss({country:this.selectedCountry});
            // this.modalCtrl.dismiss();
            // }catch(e){
            this.popoverCtrl.dismiss({ country: this.selectedCountry });
            // }
        }
    }
    scrollTo(index) {
        setTimeout(() => {
            // console.log("index",index);
            let arr = this.list.nativeElement.children;
            // console.log("arr",arr.length);
            let item = arr[index];
            item.scrollIntoView();
            // console.log("item",item);
        }, 500);
    }
};
CountriesPage.ctorParameters = () => [
    { type: _services_api_service__WEBPACK_IMPORTED_MODULE_2__.ApiService },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.ModalController },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.PopoverController },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.NavParams }
];
CountriesPage.propDecorators = {
    list: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ViewChild, args: [_ionic_angular__WEBPACK_IMPORTED_MODULE_5__.IonList, { read: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ElementRef },] }]
};
CountriesPage = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'app-countries',
        template: _Volumes_Junaid_Programming_Ionic_Shkalah_node_modules_ngtools_webpack_src_loaders_direct_resource_js_countries_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_countries_page_scss__WEBPACK_IMPORTED_MODULE_1__]
    })
], CountriesPage);



/***/ }),

/***/ 37784:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@ngtools/webpack/src/loaders/direct-resource.js!./src/app/countries/countries.page.html ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<ion-row class=\"header\"></ion-row>\n<ion-row style=\"background: #7f132a;\" class=\"d-flex justify-content-center align-items-center\">\n  <ion-col size=\"1\" >\n    <img src=\"assets/images/back.png\" (click)=\"goBack()\" alt=\"\">\n  </ion-col>\n  <ion-col>\n    <ion-title class=\"p0 cwhite\">Select Country</ion-title>\n  </ion-col>\n</ion-row>\n<ion-content>\n \n  <div class=\"w100 h100\" *ngIf=\"isLoading\">\n    <app-loading></app-loading>\n  </div>\n  <ion-list>\n    <ion-item button *ngFor=\"let item of countries; let i = index\" (click)=\"selectCountry(item,i)\">\n      <ion-label>\n        (+{{item.phonecode}}) - {{item.name}}\n      </ion-label>\n      <ion-icon *ngIf=\"selectedCountry.country_id == item.country_id\" class=\"check-icon\" name=\"checkmark-done-outline\" slot=\"end\"></ion-icon>\n    </ion-item>\n  </ion-list>\n\n</ion-content>\n");

/***/ }),

/***/ 15259:
/*!***********************************************!*\
  !*** ./src/app/countries/countries.page.scss ***!
  \***********************************************/
/***/ ((module) => {

module.exports = ".active {\n  --background: #d7d7d7;\n}\n\n.check-icon {\n  color: #2254fa;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdW50cmllcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxxQkFBQTtBQUNKOztBQUNBO0VBQ0ksY0FBQTtBQUVKIiwiZmlsZSI6ImNvdW50cmllcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aXZle1xuICAgIC0tYmFja2dyb3VuZDogI2Q3ZDdkNztcbn1cbi5jaGVjay1pY29ue1xuICAgIGNvbG9yOiByZ2IoMzQsIDg0LCAyNTApO1xufSJdfQ== */";

/***/ })

}]);
//# sourceMappingURL=default-node_modules_capacitor-firebase-auth_dist_esm_index_js-src_app_countries_countries_page_ts.js.map